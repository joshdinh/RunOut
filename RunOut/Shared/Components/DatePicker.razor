
<select @bind="Day">
    @for (int i = 1; i <= 31; i++)
    {
        <option>@i</option>
    }

</select>
<select @bind="Month">
    @for (int i = 1; i <= 12; i++)
    {
        <option value="@i">@Months[i-1]</option>
    }
</select>
<select @bind="Year">
    @for (int i = DateTime.Now.Year;
    i <= DateTime.Now.Year + 5; i++)
    {
        <option>@i</option>
    }
</select>

@code {
    @inject IJSRuntime JSRuntime
    public int Day { get; set; }
    public int Month { get; set; }
    public int Year { get; set; }

    public string[] Months { get; set; } = {
       "January", "February", "March",
       "April", "May", "June", "July",
       "August", "September", "October",
       "November", "December" };
    UserData data;

    private void FormSubmitted()
    {
        UserData currentValue;
        if (Database.userData.TryGetValue(Database.currentUser, out currentValue))
        {
            currentValue.marathonRaceDay = Day;
            currentValue.marathonRaceMonth = Month;
            currentValue.marathonRaceYear = Year;
            JSRuntime.InvokeVoidAsync("console.log", "marathonName: ", data.marathonName);
            JSRuntime.InvokeVoidAsync("console.log", "marathonRaceMonth: ", data.marathonRaceMonth);
            JSRuntime.InvokeVoidAsync("console.log", "marathonRaceDay: ", data.marathonRaceDay);

            Database.userData[Database.currentUser] = currentValue;
        }

    }

}
