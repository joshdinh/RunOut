@page "/calendarCard"
@layout MainLayout

<div class="card">
    @if (active == 1)
    {
        <img src="Images/StartRunCard.png" class="cardContainer" />
        <a class="startRun" href="/@title" @onclick = "startRun">
        </a>
    }
    @if(active == 0)
    {
        <img src="Images/InactiveRunCard.png" class="cardContainer" />
    }

    @if(active == 2)
    {
        <img src="Images/ReviewRunCard.png" class="cardContainer" />
        <a class="startRun" href="/reviewrun/10/530/530">
        </a>
    }

        <h3 class="title"> @title</h3>
        <p class="distance">@distance km</p>
        <p class="pace">@pace</p>

       <p class="day">@day</p>
        <p class="month"> @month</p>

        <button class="options" @onclick = "Switch"/>

    @if(_display)
    {
     <img src="Images/Dropdown Selection.png" class="optionModal" />
     <button class="restOption" @onclick = "restOption"/>
     <button class="intervalOption" @onclick = "intervalOption"/>
     <button class="longOption" @onclick = "longOption"/>
    }
</div>
@code {
    [Parameter]
    public string title { get; set; } = "Interval";
    [Parameter]
    public double distance { get; set; }
    [Parameter]
    public double pace { get; set; }
    [Parameter]
    public string month { get; set; } = "Month";
    [Parameter]
    public int day { get; set; } = 1;
    [Parameter]
    public int active { get; set; } = 0;
    [Parameter]
    public int listPointer { get; set; } = 0; 

    [CascadingParameter]
    protected Calendar_Data? Calendar_Data { get; set; }

    private bool _display = false;

    private void startRun()
    {
        @if (title == "Rest")
        {
            active = 1;
            Calendar_Data.runs[listPointer] = new Calendar_Data.Day(month, "Sun", day, title, new Calendar_Data.Interval(2, 2.5, 3, 3.5), 2.0, "5:30", 2);
        }
    }

    private void restOption()
    {
        title = "Rest";
        Calendar_Data.runs[listPointer] = new Calendar_Data.Day(month, "Sun", day, title, new Calendar_Data.Interval(2, 2.5, 3, 3.5), 2.0, "5:30", active);
    }

    private void intervalOption()
    {
        title = "Interval";
        Calendar_Data.runs[listPointer] = new Calendar_Data.Day(month, "Sun", day, title, new Calendar_Data.Interval(2, 2.5, 3, 3.5), 2.0, "5:30", active);
    }

    private void longOption()
    {
        title = "LongRun";
        Calendar_Data.runs[listPointer] = new Calendar_Data.Day(month, "Sun", day, title, new Calendar_Data.Interval(2, 2.5, 3, 3.5), 2.0, "5:30", active);
    }
    private void Switch(MouseEventArgs e)
    => _display = !_display;
}