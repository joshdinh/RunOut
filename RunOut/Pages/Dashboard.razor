@page "/dashboard"
@layout MainLayout

<div class='container'>
    <div class='info-container'>
        <div class='with-bg time-container'>
            <p class='day'>13</p>
            <p class='days'>Days left</p>
            <p class='date'>@marathonMonth @marathonDay</p>
        </div>

        <div class='info-section'>
            <h1>@raceName</h1>
            <p> Notes: Remember to bring your lucky underwear</p>
        </div>
    </div>


    <a href='/noprogram'>
        <input type="button" value="ADD NEW RACE DATE" class='button with-bg' />
    </a>

    <a href='/runningform'>
        <input type="button" value="TIPS AND TRICKS" class='button with-bg' />
    </a>



    <div class='with-bg week-workout'>
        <p>WEEK X</p>


        <div class="calendarCardContainer"> 
            @for (int i = 0; i < returnLargest(); i++)
            {
                <Calendar_Card 
                    month="@Calendar_Data.runs[i].month"
                           day="@Calendar_Data.runs[i].day"
                           title="@Calendar_Data.runs[i].runType"
                           distance="@Calendar_Data.runs[i].distance"
                           active="@Calendar_Data.runs[i].active"
                           listPointer="@i">
                </Calendar_Card>
            }
         </div>
    </div>

    <div class='with-bg nav'>
        <img src="Images/Bottom Nav_Home.png" class="bottomNav" />
        <a href="/dashboard" class="homepage"></a>
        <a href="/calendar" class="calendar"></a>
        <a href="/profile" class="profile"></a>
        <a href="/userfeed" class="feed"></a>
    </div>
</div>

@code {
    @inject IJSRuntime JSRuntime
    //holds calendar data
    [CascadingParameter]
    protected Calendar_Data? Calendar_Data { get; set; }


    //int currentWeek;
    int marathonMonth;
    int marathonDay;


    private string raceName { get; set; }
    public int returnLargest()
    {
        if (Calendar_Data.runs.Count< 4)
        {
            return Calendar_Data.runs.Count;
        }
        return 4;
    }
    protected override void OnInitialized()
    {

        raceName = Calendar_Data.accounts[Calendar_Data.accountNumber].runName;
        marathonMonth = Calendar_Data.accounts[Calendar_Data.accountNumber].raceMonth;
        marathonDay = Calendar_Data.accounts[Calendar_Data.accountNumber].raceDay;
         /* UserData data;
        if (Database.userData.TryGetValue(Database.currentUser, out data)){
            JSRuntime.InvokeVoidAsync("console.log", "marathonName: ", data.marathonName);
            JSRuntime.InvokeVoidAsync("console.log", "marathonRaceMonth: ", data.marathonRaceMonth);
            JSRuntime.InvokeVoidAsync("console.log", "marathonRaceDay: ", data.marathonRaceDay);
            JSRuntime.InvokeVoidAsync("console.log", "raceName: ", data.marathonName);
            marathonName = data.marathonName;
            marathonMonth = data.marathonRaceMonth;
            marathonDay = data.marathonRaceDay;
            //currentWeek = data.currentWorkoutDay;
            raceName = data.marathonName;

            //DateTime currentDate = DateTime.Now;
            //DateTime futureDate = new DateTime(data.marathonRaceYear, data.marathonRaceMonth, data.marathonRaceDay);
            //TimeSpan timeLeft = futureDate - currentDate;
            //int daysLeft = timeLeft.Days;
        };
        
*/


    }
}
