@page "/login"
@layout MainLayout

<div class='login-box'>
    <h1> RUN OUT</h1>
    @if (errorMessage != null)
    {
        <p class="text-danger">@errorMessage</p>
    }
    <form method="POST">
        <label> Username</label>
        <input type="text" @bind="username" />

        <label> Password</label>
        <input type="password" @bind="password" />

        <input type="button" value="SUBMIT" onclick="@UserLogin" />

    </form>

</div>

@code {
    @using System.Collections.Generic
    @using Microsoft.AspNetCore.Components.Routing
    @inject IJSRuntime JSRuntime
    @inject NavigationManager NavManager

    string username;
    string password;
    string errorMessage;

    [CascadingParameter]
    protected Calendar_Data? Calendar_Data { get; set; }
        

    protected override void OnInitialized()
    {
        Calendar_Data.generateAccounts();
    }
    private void UserLogin()
    {

        string correctPassword = "";

        for (int i = 0; i < Calendar_Data.accounts.Count;i++)
        {
             if (Calendar_Data.accounts[i].user.Equals(username) && Calendar_Data.accounts[i].password.Equals( password))
             {
                Calendar_Data.accountNumber = i;
                Calendar_Data.currentUser = username;
                Calendar_Data.currentPassword = password;
                Calendar_Data.currentName = Calendar_Data.accounts[i].name;
                Calendar_Data.createRoutine(i);
                //login successful
            
                JSRuntime.InvokeAsync<object>("console.log", "Login successful!");
                JSRuntime.InvokeVoidAsync("console.log", ": ", Calendar_Data.accounts[3].user);

            if(Calendar_Data.accounts[Calendar_Data.accountNumber].raceDay == 0)
                {
                    NavManager.NavigateTo("/noprogram");
                }
                else
                {
                    NavManager.NavigateTo("/dashboard");
                }
                //NavManager.NavigateTo("/profile");
             }
        }
            //Login failed
            errorMessage = "Invalid username or password.";
        JSRuntime.InvokeVoidAsync("console.log", ": ", Calendar_Data.accounts[3].user);
    }
}
